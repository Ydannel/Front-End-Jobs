{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danell\\\\Desktop\\\\Proyectos_React\\\\NodeSend(Mern_Stack)\\\\sendmimg\\\\pages\\\\enlaces\\\\[enlace].js\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/Layout';\nimport clienteAxios from '../../config/axios';\nimport React, { useState, useContext } from 'react';\nimport appContext from '../../context/app/appContext';\nimport Alerta from '../../components/Alerta'; //genera los resultados\n\nexport async function getServerSideProps({\n  params\n}) {\n  const {\n    enlace\n  } = params;\n  const resultado = await clienteAxios.get(`/api/enlaces/${enlace}`);\n  return {\n    props: {\n      enlace: resultado.data\n    }\n  };\n} //genera las url de forma dinamica\n\nexport async function getServerSidePaths() {\n  const enlaces = await clienteAxios.get('/api/enlaces');\n  return {\n    paths: enlaces.data.enlaces.map(enlace => ({\n      params: {\n        enlace: enlace.url\n      }\n    })),\n    fallback: false\n  };\n}\nexport default (({\n  enlace\n}) => {\n  // Contextapp\n  const AppContext = useContext(appContext);\n  const {\n    mostrarAlerta,\n    mensaje_archivo\n  } = AppContext;\n  const {\n    0: tienePassword,\n    1: setTienePassword\n  } = useState(enlace.password);\n  const {\n    0: password,\n    1: setPassword\n  } = useState('');\n  console.log(tienePassword);\n\n  const verificarPassword = async e => {\n    e.preventDefault();\n    const data = {\n      password\n    };\n\n    try {\n      const resultado = await clienteAxios.post(`/api/enlaces/${enlace.enlace}`, data);\n      setTienePassword(resultado.data.password);\n    } catch (error) {\n      mostrarAlerta(error.response.data.msg);\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, tienePassword ? __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, \"Este enlace esta protegido por un password, colocalo a continuaci\\xF3n\"), mensaje_archivo && __jsx(Alerta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 46\n    }\n  }), __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, __jsx(\"form\", {\n    className: \"\",\n    onSubmit: e => verificarPassword(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 37\n    }\n  }, __jsx(\"input\", {\n    type: \"password\",\n    className: \"\",\n    id: \"password\",\n    placeholder: \"Password del enlace\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 41\n    }\n  })), __jsx(\"input\", {\n    type: \"submit\",\n    className: \"bg-red-500 hover:bg-gray-900 w-full p-2 text-white uppercase font-bold\",\n    value: \"Validar Password...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 37\n    }\n  }))))) : __jsx(React.Fragment, null, __jsx(\"h1\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, \"Descarga tu archivo:\"), __jsx(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    href: `${process.env.backendURL}/api/archivos/${enlace.archivo}`,\n    className: \"\",\n    download: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 29\n    }\n  }, \"Aqu\\xED\"))));\n});","map":{"version":3,"sources":["C:/Users/Danell/Desktop/Proyectos_React/NodeSend(Mern_Stack)/sendmimg/pages/enlaces/[enlace].js"],"names":["Layout","clienteAxios","React","useState","useContext","appContext","Alerta","getServerSideProps","params","enlace","resultado","get","props","data","getServerSidePaths","enlaces","paths","map","url","fallback","AppContext","mostrarAlerta","mensaje_archivo","tienePassword","setTienePassword","password","setPassword","console","log","verificarPassword","e","preventDefault","post","error","response","msg","target","value","process","env","backendURL","archivo"],"mappings":"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","sourcesContent":["import Layout from '../../components/Layout';\nimport clienteAxios from '../../config/axios';\nimport React, {useState, useContext } from 'react';\nimport appContext from '../../context/app/appContext';\nimport Alerta from '../../components/Alerta';\n\n\n//genera los resultados\nexport async function getServerSideProps({params}) {\n    const { enlace } = params;\n\n   const resultado = await clienteAxios.get(`/api/enlaces/${enlace}`);\n\n\n    return {\n        props: {\n            enlace: resultado.data\n        }\n    }\n}\n\n//genera las url de forma dinamica\nexport async function getServerSidePaths() {\n        const enlaces = await clienteAxios.get('/api/enlaces');\n        return {\n            paths: enlaces.data.enlaces.map( enlace => ( {\n                params: { enlace : enlace.url }\n            })),\n            fallback: false\n        }\n}\n\n\n\nexport default ({enlace}) => {\n\n    // Contextapp\n    const AppContext = useContext(appContext);\n    const {  mostrarAlerta, mensaje_archivo } = AppContext;\n    \n\n    const [ tienePassword, setTienePassword ] = useState(enlace.password);\n    const [ password, setPassword ] = useState('');\n\n    console.log(tienePassword)\n\n\n    const verificarPassword = async e => {\n        e.preventDefault();\n\n        const data = {\n            password\n        }\n\n        try {\n            const resultado = await clienteAxios.post(`/api/enlaces/${enlace.enlace}`, data);\n            setTienePassword(resultado.data.password);\n        } catch (error) {\n            mostrarAlerta(error.response.data.msg);\n        }\n        \n\n    }\n\n    return (\n        <Layout>\n            {\n                tienePassword ? (\n                    <>\n                        <p className=\"\">Este enlace esta protegido por un password, colocalo a continuaci√≥n</p>\n\n                        { mensaje_archivo && <Alerta /> }\n                        <div className=\"\">\n                            <div className=\"\">\n                                <form\n                                    className=\"\"\n                                    onSubmit={ e => verificarPassword(e) }\n                                >\n                                    <div className=\"\">\n                                        <input\n                                            type=\"password\"\n                                            className=\"\"\n                                            id=\"password\"\n                                            placeholder=\"Password del enlace\"\n                                            value={password}\n                                            onChange={ e => setPassword(e.target.value) }\n                                        />\n                                    </div>\n\n                                    <input \n                                        type=\"submit\"\n                                        className=\"bg-red-500 hover:bg-gray-900 w-full p-2 text-white uppercase font-bold\"\n                                        value=\"Validar Password...\"\n                                    />\n                                </form>\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <h1 className=\"\">Descarga tu archivo:</h1>\n                        <div className=\"\">\n                            <a \n                                href={`${process.env.backendURL}/api/archivos/${enlace.archivo}`} \n                                className=\"\"\n                                download    \n                            >Aqu√≠</a>\n                        </div>\n                    </>\n                )\n            }\n\n        </Layout>\n    )\n}"]},"metadata":{},"sourceType":"module"}