{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Danell\\\\Desktop\\\\Proyectos_React\\\\NodeSend(Mern_Stack)\\\\sendmimg\\\\pages\\\\crear_cuenta.jsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport Layout from '../Components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Alerta from '../components/Alerta';\nimport { useRouter } from 'next/router';\nimport authContext from '../context/auth/authContext'; //npm i formik yup validacion de formularios\n//npm i react-dropzone con esto se suben las imagenes\n//usecontext crea el context \n//use reducer son las funciones que modifican el state\n//use state las acciones que disparan en el reducer\n//context. provider = da la data\n//context. consumer = recive la data\n\n/*\r\npara comunicarse el state con el reducer existen los\r\ntypes\r\nestos van el el objeto dispatch el cual son dos \r\nobjetos: el type  y el payload\r\ncon el type se evalua en el case de un switch\r\ncon el payload es que se modifican los datos del state\r\n           dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: error.response.data.msg\r\n            })\r\n\r\n*/\n\nconst crear_Cuenta = () => {\n  const AuthContext = useContext(authContext);\n  const {\n    mensaje,\n    registrarUsuario\n  } = AuthContext;\n  const router = useRouter(); // Formulario y validación con formik y Yup\n\n  const formik = useFormik({\n    initialValues: {\n      nombre: '',\n      email: '',\n      pass: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El Nombre es Obligatorio'),\n      email: Yup.string().email('El email no es válido').required('El Email es Obligatorio'),\n      pass: Yup.string().required('El password no puede ir vacio').min(8, 'El password debe contener al menos 8 caracteres')\n    }),\n    onSubmit: valores => {\n      registrarUsuario(valores);\n      router.push('/');\n    }\n  });\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, mensaje && __jsx(Alerta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 22\n    }\n  }), __jsx(\"h2\", {\n    className: \"headline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 20\n    }\n  }, \"Crea una cuenta\"), __jsx(\"form\", {\n    className: \"paper form-group\",\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Escribe tu nombre\",\n    id: \"nombre\",\n    value: formik.values.nombre,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 20\n    }\n  }), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    className: \"alert alert-danger button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 24\n    }\n  }, formik.errors.nombre, \" \") : null, __jsx(\"input\", {\n    type: \"email\",\n    placeholder: \"Escribe tu correo\",\n    id: \"email\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 22\n    }\n  }), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    className: \"alert alert-danger button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 24\n    }\n  }, formik.errors.pass, \" \") : null, __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"Escribe tu clave\",\n    id: \"pass\",\n    value: formik.values.pass,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 22\n    }\n  }), formik.touched.pass && formik.errors.pass ? __jsx(\"div\", {\n    className: \"alert alert-danger button-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 24\n    }\n  }, formik.errors.pass, \" \") : null, __jsx(\"button\", {\n    className: \"btn-success-outline\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 20\n    }\n  }, \" Crear cuenta\"))));\n};\n\nexport default crear_Cuenta;","map":{"version":3,"sources":["C:/Users/Danell/Desktop/Proyectos_React/NodeSend(Mern_Stack)/sendmimg/pages/crear_cuenta.jsx"],"names":["React","useContext","useEffect","Layout","useFormik","Yup","Alerta","useRouter","authContext","crear_Cuenta","AuthContext","mensaje","registrarUsuario","router","formik","initialValues","nombre","email","pass","validationSchema","object","string","required","min","onSubmit","valores","push","handleSubmit","values","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport Layout from '../Components/Layout';\r\nimport { useFormik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Alerta from '../components/Alerta'\r\nimport {useRouter} from 'next/router';\r\n\r\nimport authContext from '../context/auth/authContext';\r\n\r\n//npm i formik yup validacion de formularios\r\n//npm i react-dropzone con esto se suben las imagenes\r\n//usecontext crea el context \r\n//use reducer son las funciones que modifican el state\r\n//use state las acciones que disparan en el reducer\r\n//context. provider = da la data\r\n//context. consumer = recive la data\r\n\r\n\r\n/*\r\npara comunicarse el state con el reducer existen los\r\ntypes\r\nestos van el el objeto dispatch el cual son dos \r\nobjetos: el type  y el payload\r\ncon el type se evalua en el case de un switch\r\ncon el payload es que se modifican los datos del state\r\n           dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: error.response.data.msg\r\n            })\r\n\r\n*/\r\n\r\nconst crear_Cuenta = () => {\r\n\r\n    const AuthContext = useContext(authContext);\r\n    const { mensaje, registrarUsuario } = AuthContext;\r\n    const router = useRouter();\r\n\r\n    // Formulario y validación con formik y Yup\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          nombre: '',\r\n          email: '',\r\n          pass: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            nombre: Yup.string()\r\n                      .required('El Nombre es Obligatorio'),\r\n            email: Yup.string()\r\n                      .email('El email no es válido')\r\n                      .required('El Email es Obligatorio'),\r\n            pass: Yup.string()\r\n                      .required('El password no puede ir vacio')\r\n                      .min(8, 'El password debe contener al menos 8 caracteres')\r\n        }),\r\n        onSubmit: valores => {\r\n            registrarUsuario(valores)\r\n            router.push('/');      \r\n        }\r\n    });\r\n  \r\n\r\n  return ( \r\n     \r\n    <Layout>\r\n\r\n        <div className=\"text-center\">\r\n\r\n        { mensaje && <Alerta />}\r\n                   <h2 className=\"headline\">Crea una cuenta</h2>\r\n               <form className=\"paper form-group\"  onSubmit={formik.handleSubmit}>\r\n                   <input  type=\"text\" placeholder=\"Escribe tu nombre\"\r\n                    id=\"nombre\"\r\n                   value={formik.values.nombre}\r\n                   onChange={formik.handleChange}\r\n                   onBlur={formik.handleBlur}\r\n                   />\r\n                   { formik.touched.nombre && formik.errors.nombre ?(\r\n                       <div className=\"alert alert-danger button-text\">{formik.errors.nombre} </div>\r\n                   ): null}\r\n\r\n\r\n                     <input  type=\"email\" placeholder=\"Escribe tu correo\"\r\n                            id=\"email\"\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                   />\r\n\r\n                  { formik.touched.email && formik.errors.email ?(\r\n                       <div className=\"alert alert-danger button-text\">{formik.errors.pass} </div>\r\n                   ): null}\r\n                     <input  type=\"password\" placeholder=\"Escribe tu clave\"\r\n                            id=\"pass\"\r\n                    value={formik.values.pass}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                   />\r\n\r\n                   \r\n                  { formik.touched.pass && formik.errors.pass ?(\r\n                       <div className=\"alert alert-danger button-text\">{formik.errors.pass} </div>\r\n                   ): null}\r\n\r\n                   <button className=\"btn-success-outline\" type=\"submit\"> Crear cuenta</button>\r\n\r\n               </form>\r\n\r\n        </div>\r\n      \r\n    </Layout> \r\n\r\n   );\r\n}\r\n \r\nexport default crear_Cuenta;"]},"metadata":{},"sourceType":"module"}