{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Danell\\\\Desktop\\\\Proyectos_React\\\\NodeSend(Mern_Stack)\\\\sendmimg\\\\pages\\\\crear_cuenta.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport Layout from '../Components/Layout';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Alerta from '../components/Alerta';\nimport authContext from '../context/auth/authContext'; //npm i formik yup validacion de formularios\n//npm i react-dropzone con esto se suben las imagenes\n//usecontext crea el context \n//use reducer son las funciones que modifican el state\n//use state las acciones que disparan en el reducer\n//context. provider = da la data\n//context. consumer = recive la data\n\n/*\r\npara comunicarse el state con el reducer existen los\r\ntypes\r\nestos van el el objeto dispatch el cual son dos \r\nobjetos: el type  y el payload\r\ncon el type se evalua en el case de un switch\r\ncon el payload es que se modifican los datos del state\r\n           dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: error.response.data.msg\r\n            })\r\n\r\n*/\n\nvar crear_Cuenta = function crear_Cuenta() {\n  _s();\n\n  var AuthContext = useContext(authContext);\n  var mensaje = AuthContext.mensaje,\n      registrarUsuario = AuthContext.registrarUsuario; // Formulario y validación con formik y Yup\n\n  var formik = useFormik({\n    initialValues: {\n      nombre: '',\n      email: '',\n      pass: ''\n    },\n    validationSchema: Yup.object({\n      nombre: Yup.string().required('El Nombre es Obligatorio'),\n      email: Yup.string().email('El email no es válido').required('El Email es Obligatorio'),\n      pass: Yup.string().required('El password no puede ir vacio').min(8, 'El password debe contener al menos 8 caracteres')\n    }),\n    onSubmit: function onSubmit(valores) {\n      registrarUsuario(valores);\n    }\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, mensaje && __jsx(Alerta, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 22\n    }\n  }), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 20\n    }\n  }, \"Crea una cuenta\"), __jsx(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"Escribe tu nombre\",\n    id: \"nombre\",\n    value: formik.values.nombre,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 20\n    }\n  }), formik.touched.nombre && formik.errors.nombre ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 24\n    }\n  }, formik.errors.nombre, \" \") : null, __jsx(\"input\", {\n    type: \"email\",\n    placeholder: \"Escribe tu correo\",\n    id: \"email\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 22\n    }\n  }), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 24\n    }\n  }, formik.errors.pass, \" \") : null, __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"Escribe tu clave\",\n    id: \"pass\",\n    value: formik.values.pass,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 22\n    }\n  }), formik.touched.pass && formik.errors.pass ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 24\n    }\n  }, formik.errors.pass, \" \") : null, __jsx(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 20\n    }\n  }, \" Crear cuenta\"))));\n};\n\n_s(crear_Cuenta, \"bMcn9//1n7sY8rhddbqlm/Jd9R4=\", false, function () {\n  return [useFormik];\n});\n\nexport default crear_Cuenta;","map":{"version":3,"sources":["C:/Users/Danell/Desktop/Proyectos_React/NodeSend(Mern_Stack)/sendmimg/pages/crear_cuenta.jsx"],"names":["React","useContext","useEffect","Layout","useFormik","Yup","Alerta","authContext","crear_Cuenta","AuthContext","mensaje","registrarUsuario","formik","initialValues","nombre","email","pass","validationSchema","object","string","required","min","onSubmit","valores","handleSubmit","values","handleChange","handleBlur","touched","errors"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport Layout from '../Components/Layout';\r\nimport { useFormik} from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Alerta from '../components/Alerta'\r\n\r\nimport authContext from '../context/auth/authContext';\r\n\r\n//npm i formik yup validacion de formularios\r\n//npm i react-dropzone con esto se suben las imagenes\r\n//usecontext crea el context \r\n//use reducer son las funciones que modifican el state\r\n//use state las acciones que disparan en el reducer\r\n//context. provider = da la data\r\n//context. consumer = recive la data\r\n\r\n\r\n/*\r\npara comunicarse el state con el reducer existen los\r\ntypes\r\nestos van el el objeto dispatch el cual son dos \r\nobjetos: el type  y el payload\r\ncon el type se evalua en el case de un switch\r\ncon el payload es que se modifican los datos del state\r\n           dispatch({\r\n                type: REGISTRO_ERROR,\r\n                payload: error.response.data.msg\r\n            })\r\n\r\n*/\r\n\r\nconst crear_Cuenta = () => {\r\n\r\n    const AuthContext = useContext(authContext);\r\n    const { mensaje, registrarUsuario } = AuthContext;\r\n  \r\n    // Formulario y validación con formik y Yup\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          nombre: '',\r\n          email: '',\r\n          pass: ''\r\n        },\r\n        validationSchema: Yup.object({\r\n            nombre: Yup.string()\r\n                      .required('El Nombre es Obligatorio'),\r\n            email: Yup.string()\r\n                      .email('El email no es válido')\r\n                      .required('El Email es Obligatorio'),\r\n            pass: Yup.string()\r\n                      .required('El password no puede ir vacio')\r\n                      .min(8, 'El password debe contener al menos 8 caracteres')\r\n        }),\r\n        onSubmit: valores => {\r\n            registrarUsuario(valores)\r\n        }\r\n    });\r\n  \r\n\r\n  return ( \r\n     \r\n    <Layout>\r\n\r\n        <div>\r\n\r\n        { mensaje && <Alerta />}\r\n                   <h2>Crea una cuenta</h2>\r\n               <form onSubmit={formik.handleSubmit}>\r\n                   <input  type=\"text\" placeholder=\"Escribe tu nombre\"\r\n                    id=\"nombre\"\r\n                   value={formik.values.nombre}\r\n                   onChange={formik.handleChange}\r\n                   onBlur={formik.handleBlur}\r\n                   />\r\n                   { formik.touched.nombre && formik.errors.nombre ?(\r\n                       <div>{formik.errors.nombre} </div>\r\n                   ): null}\r\n\r\n\r\n                     <input  type=\"email\" placeholder=\"Escribe tu correo\"\r\n                            id=\"email\"\r\n                    value={formik.values.email}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                   />\r\n\r\n                  { formik.touched.email && formik.errors.email ?(\r\n                       <div>{formik.errors.pass} </div>\r\n                   ): null}\r\n                     <input  type=\"password\" placeholder=\"Escribe tu clave\"\r\n                            id=\"pass\"\r\n                    value={formik.values.pass}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                   />\r\n\r\n                   \r\n                  { formik.touched.pass && formik.errors.pass ?(\r\n                       <div>{formik.errors.pass} </div>\r\n                   ): null}\r\n\r\n                   <button type=\"submit\"> Crear cuenta</button>\r\n\r\n               </form>\r\n\r\n        </div>\r\n      \r\n    </Layout> \r\n\r\n   );\r\n}\r\n \r\nexport default crear_Cuenta;"]},"metadata":{},"sourceType":"module"}