{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Danell\\\\Desktop\\\\Proyectos_React\\\\NodeSend(Mern_Stack)\\\\sendmimg\\\\components\\\\Dropzone.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useContext } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport appContext from '../context/app/appContext';\nimport authContext from '../context/auth/authContext';\nimport Formulario from './Form'; //use calback usado para multiples rendering de la app\n\nvar Dropzone = function Dropzone() {\n  _s();\n\n  // Context de la app\n  var AppContext = useContext(appContext);\n  var cargando = AppContext.cargando,\n      mostrarAlerta = AppContext.mostrarAlerta,\n      subirArchivo = AppContext.subirArchivo,\n      crearEnlace = AppContext.crearEnlace; // Context de autenticación\n\n  var AuthContext = useContext(authContext);\n  var usuario = AuthContext.usuario,\n      autenticado = AuthContext.autenticado;\n\n  var onDropRejected = function onDropRejected() {\n    mostrarAlerta('No se pudo subir, el Limite es 1MB, obten una cuenta gratis para subir archivos más grandes');\n  };\n\n  var onDropAccepted = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(acceptedFiles) {\n      var formData;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // Crear un form Data\n              formData = new FormData(); //crea el formdata\n\n              formData.append('archivo', acceptedFiles[0]);\n              subirArchivo(formData, acceptedFiles[0].path);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), []);\n  var maxSize = autenticado ? 1000000000000 : 1000000; // Extraer contenido de Dropzone\n\n  var _useDropzone = useDropzone({\n    onDropAccepted: onDropAccepted,\n    onDropRejected: onDropRejected,\n    maxSize: maxSize\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps,\n      isDragActive = _useDropzone.isDragActive,\n      acceptedFiles = _useDropzone.acceptedFiles;\n\n  var archivos = acceptedFiles.map(function (archivo) {\n    return __jsx(\"li\", {\n      key: archivo.lastModified,\n      className: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, __jsx(\"p\", {\n      className: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, archivo.path), __jsx(\"p\", {\n      className: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, //mostrar en MB\n    (archivo.size / Math.pow(1024, 2)).toFixed(2), \" MB\"));\n  });\n  return __jsx(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, //Si tengo ya un archivo subido, se mostrara el listado de archivos para ponerle configuracion\n  //en caso contrario, subir un archivo\n  acceptedFiles.length > 0 ? __jsx(\"div\", {\n    className: \" text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, __jsx(\"h4\", {\n    className: \"headline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Archivos\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, archivos), autenticado ? __jsx(Formulario, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 39\n    }\n  }) : \"\", //spinner  \n  cargando ? __jsx(\"p\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 33\n    }\n  }, \"Subiendo Archivo...\") : __jsx(\"button\", {\n    className: \"paper-btn btn-block button\",\n    onClick: function onClick() {\n      return crearEnlace();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }\n  }, \"Crear Enlace\")) : __jsx(\"div\", _extends({}, getRootProps({\n    className: 'dropzone w-full py-32'\n  }), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", _extends({\n    className: \"h-100 \"\n  }, getInputProps(), {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  })), isDragActive ? __jsx(\"p\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 44\n    }\n  }, \" Suelta el archivo \") : __jsx(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, __jsx(\"p\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, \"Selecciona un archivo y arrastralo aqu\\xED\"), __jsx(\"button\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, \"Selecciona archivos para subir\"))));\n};\n\n_s(Dropzone, \"kwQnK7tG9AzcGColoizl2K3ELkI=\", false, function () {\n  return [useDropzone];\n});\n\n_c = Dropzone;\nexport default Dropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropzone\");","map":{"version":3,"sources":["C:/Users/Danell/Desktop/Proyectos_React/NodeSend(Mern_Stack)/sendmimg/components/Dropzone.jsx"],"names":["React","useCallback","useContext","useDropzone","appContext","authContext","Formulario","Dropzone","AppContext","cargando","mostrarAlerta","subirArchivo","crearEnlace","AuthContext","usuario","autenticado","onDropRejected","onDropAccepted","acceptedFiles","formData","FormData","append","path","maxSize","getRootProps","getInputProps","isDragActive","archivos","map","archivo","lastModified","size","Math","pow","toFixed","length","className"],"mappings":"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","sourcesContent":["import React, {  useCallback, useContext } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport appContext from '../context/app/appContext';\r\nimport authContext from '../context/auth/authContext';\r\nimport Formulario from './Form';\r\n\r\n\r\n//use calback usado para multiples rendering de la app\r\nconst Dropzone = () => {\r\n\r\n    // Context de la app\r\n    const AppContext = useContext(appContext);\r\n    const { cargando, mostrarAlerta, subirArchivo, crearEnlace } = AppContext;\r\n\r\n    // Context de autenticación\r\n    const AuthContext = useContext(authContext);\r\n    const { usuario, autenticado } = AuthContext;\r\n\r\n    const onDropRejected = () => {\r\n        mostrarAlerta('No se pudo subir, el Limite es 1MB, obten una cuenta gratis para subir archivos más grandes');\r\n    }\r\n\r\n    const onDropAccepted = useCallback( async (acceptedFiles) => {\r\n        // Crear un form Data\r\n        const formData = new FormData();\r\n        //crea el formdata\r\n        formData.append('archivo', acceptedFiles[0]);\r\n\r\n        subirArchivo(formData, acceptedFiles[0].path);\r\n    }, []);\r\n\r\n\r\n    const maxSize = autenticado ? 1000000000000 : 1000000;\r\n\r\n    // Extraer contenido de Dropzone\r\n    const { getRootProps, getInputProps, isDragActive, acceptedFiles } = useDropzone({onDropAccepted, onDropRejected, maxSize});\r\n\r\n    const archivos = acceptedFiles.map( archivo => (\r\n        <li key={archivo.lastModified} className=\"\">\r\n            <p className=\"\">{archivo.path}</p> \r\n            <p className=\"\">{\r\n            //mostrar en MB\r\n            (archivo.size / Math.pow(1024, 2)).toFixed(2) } MB</p>\r\n        </li>\r\n    ) );\r\n\r\n\r\n\r\n\r\n    return ( \r\n        <div className=\"\">\r\n\r\n            { \r\n            //Si tengo ya un archivo subido, se mostrara el listado de archivos para ponerle configuracion\r\n            //en caso contrario, subir un archivo\r\n            acceptedFiles.length > 0 ? (\r\n                <div className=\" text-center\">\r\n                    <h4 className=\"headline\">Archivos</h4>\r\n                    <ul>\r\n                        {archivos}\r\n                    </ul>\r\n\r\n                    {\r\n                        autenticado ? <Formulario /> : \"\"\r\n                    }\r\n\r\n                     { //spinner  \r\n                     cargando ? <p className=\"\">Subiendo Archivo...</p> : (\r\n                     \r\n                     <button\r\n                            className=\"paper-btn btn-block button\"\r\n                            onClick={ () => crearEnlace()  }\r\n                        >\r\n                            Crear Enlace\r\n                        </button>\r\n                    )}\r\n\r\n\r\n                </div>\r\n\r\n            ) : (\r\n                <div { ...getRootProps({ className: 'dropzone w-full py-32' }) }>\r\n                    <input className=\"h-100 \" { ...getInputProps() } />\r\n                        {\r\n                            isDragActive ? <p className=\"\"> Suelta el archivo </p> :\r\n                            <div className=\"\">\r\n                                <p className=\"\">Selecciona un archivo y arrastralo aquí</p>\r\n                                <button className=\"\" >\r\n                                    Selecciona archivos para subir\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                </div>\r\n            ) }\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Dropzone;"]},"metadata":{},"sourceType":"module"}