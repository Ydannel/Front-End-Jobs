{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Danell\\\\Desktop\\\\Proyectos_React\\\\NodeSend(Mern_Stack)\\\\sendmimg\\\\pages\\\\login.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect } from 'react';\nimport Layout from '../Components/Layout';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport Alerta from '../components/Alerta';\nimport { useRouter } from 'next/router';\nimport authContext from '../context/auth/authContext';\n\nvar Login = function Login() {\n  _s();\n\n  var AuthContext = useContext(authContext);\n  var mensaje = AuthContext.mensaje,\n      autenticado = AuthContext.autenticado,\n      iniciarSesion = AuthContext.iniciarSesion; //el routing\n\n  var router = useRouter();\n  useEffect(function () {\n    if (autenticado) {\n      router.push('/');\n    }\n  }, [autenticado]); //validacion con formik\n\n  var formik = useFormik({\n    //primero se le pasa un valor inicial\n    initialValues: {\n      email: '',\n      pass: ''\n    },\n    //evitar que se mande vacio el form con yup\n    validationSchema: yup.object({\n      email: yup.string().required('El correo es obligatorio').email('el correo creado no es valido'),\n      pass: yup.string().required('La clave es obligatoria').min('La clave debe de ser de un minimo de 8 caracteres')\n    }),\n    onSubmit: function onSubmit(valores) {\n      iniciarSesion(valores);\n    }\n  });\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"text-center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, mensaje && __jsx(Alerta, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 18\n    }\n  }), __jsx(\"h2\", {\n    className: \"headline\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }\n  }, \"Inicia sesion\"), __jsx(\"form\", {\n    className: \"paper form-group\",\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }\n  }, __jsx(\"input\", {\n    type: \"email\",\n    placeholder: \"Escribe tu correo\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: \"input-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 18\n    }\n  }), formik.touched.email && formik.errors.email ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 20\n    }\n  }, formik.errors.pass, \" \") : null, __jsx(\"input\", {\n    type: \"password\",\n    placeholder: \"Escribe tu clave\",\n    value: formik.values.pass,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: \"input-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 18\n    }\n  }), formik.touched.pass && formik.errors.pass ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 20\n    }\n  }, formik.errors.pass, \" \") : null, __jsx(\"button\", {\n    type: \"submit\",\n    className: \"paper-btn btn-pink\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 16\n    }\n  }, \" Iniciar sesion\"))));\n};\n\n_s(Login, \"2j99ihpnGtN/ruATsA0K61U0+60=\", false, function () {\n  return [useRouter, useFormik];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Danell/Desktop/Proyectos_React/NodeSend(Mern_Stack)/sendmimg/pages/login.jsx"],"names":["React","useContext","useEffect","Layout","useFormik","yup","Alerta","useRouter","authContext","Login","AuthContext","mensaje","autenticado","iniciarSesion","router","push","formik","initialValues","email","pass","validationSchema","object","string","required","min","onSubmit","valores","handleSubmit","values","handleChange","handleBlur","touched","errors"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,QAAyB,QAAzB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAEhB,MAAMC,WAAW,GAAGT,UAAU,CAACO,WAAD,CAA9B;AAFgB,MAGRG,OAHQ,GAGiCD,WAHjC,CAGRC,OAHQ;AAAA,MAGCC,WAHD,GAGiCF,WAHjC,CAGCE,WAHD;AAAA,MAGeC,aAHf,GAGiCH,WAHjC,CAGeG,aAHf,EAMhB;;AAEA,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AAEAL,EAAAA,SAAS,CAAC,YAAI;AACP,QAAIU,WAAJ,EAAiB;AACVE,MAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACN;AACP,GAJQ,EAIP,CAACH,WAAD,CAJO,CAAT,CAVgB,CAgBf;;AAEA,MAAMI,MAAM,GAAGZ,SAAS,CAAC;AAExB;AAEAa,IAAAA,aAAa,EAAC;AACVC,MAAAA,KAAK,EAAE,EADG;AAEVC,MAAAA,IAAI,EAAC;AAFK,KAJU;AASxB;AAEAC,IAAAA,gBAAgB,EAAEf,GAAG,CAACgB,MAAJ,CAAW;AACzBH,MAAAA,KAAK,EAAEb,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,0BAAtB,EACNL,KADM,CACA,+BADA,CADkB;AAGzBC,MAAAA,IAAI,EAAEd,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,yBAAtB,EACLC,GADK,CACD,mDADC;AAHmB,KAAX,CAXM;AAmBxBC,IAAAA,QAAQ,EAAE,kBAAAC,OAAO,EAAI;AAClBb,MAAAA,aAAa,CAACa,OAAD,CAAb;AACF;AArBuB,GAAD,CAAxB;AA2BH,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEf,OAAO,IAAI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFb,EAKW;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALX,EAMO;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,IAAA,QAAQ,EAAEK,MAAM,CAACW,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEM;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,WAAW,EAAC,mBAAjC;AACD,IAAA,KAAK,EAAEX,MAAM,CAACY,MAAP,CAAcV,KADpB;AAED,IAAA,QAAQ,EAAEF,MAAM,CAACa,YAFhB;AAGD,IAAA,MAAM,EAAEb,MAAM,CAACc,UAHd;AAID,IAAA,SAAS,EAAC,aAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,EAUKd,MAAM,CAACe,OAAP,CAAeb,KAAf,IAAwBF,MAAM,CAACgB,MAAP,CAAcd,KAAtC,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,MAAM,CAACgB,MAAP,CAAcb,IAApB,MADH,GAEE,IAZP,EAaM;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,WAAW,EAAC,kBAApC;AACD,IAAA,KAAK,EAAEH,MAAM,CAACY,MAAP,CAAcT,IADpB;AAED,IAAA,QAAQ,EAAEH,MAAM,CAACa,YAFhB;AAGD,IAAA,MAAM,EAAEb,MAAM,CAACc,UAHd;AAID,IAAA,SAAS,EAAC,aAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbN,EAqBKd,MAAM,CAACe,OAAP,CAAeZ,IAAf,IAAuBH,MAAM,CAACgB,MAAP,CAAcb,IAArC,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,MAAM,CAACgB,MAAP,CAAcb,IAApB,MADH,GAEE,IAvBP,EAyBI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,oBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAzBJ,CANP,CAFA,CADF;AA0CD,CAvFD;;GAAMV,K;UAQaF,S,EAUCH,S;;;KAlBdK,K;AAyFN,eAAeA,KAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport Layout from '../Components/Layout'\r\nimport { useFormik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport Alerta from '../components/Alerta';\r\nimport {useRouter} from 'next/router';\r\n\r\nimport authContext from '../context/auth/authContext';\r\n\r\nconst Login = () => {\r\n\r\n    const AuthContext = useContext(authContext);\r\n    const { mensaje, autenticado , iniciarSesionÂ } = AuthContext;\r\n\r\n          \r\n    //el routing\r\n\r\n    const router = useRouter();\r\n\r\n    useEffect(()=>{\r\n           if (autenticado) {\r\n                  router.push('/');           \r\n           }\r\n    },[autenticado]);\r\n  \r\n     //validacion con formik\r\n\r\n     const formik = useFormik({\r\n           \r\n      //primero se le pasa un valor inicial\r\n\r\n      initialValues:{\r\n          email: '',\r\n          pass:''\r\n      },\r\n\r\n      //evitar que se mande vacio el form con yup\r\n\r\n      validationSchema: yup.object({\r\n          email: yup.string().required('El correo es obligatorio')\r\n          .email('el correo creado no es valido'),\r\n          pass: yup.string().required('La clave es obligatoria')\r\n          .min('La clave debe de ser de un minimo de 8 caracteres')\r\n          \r\n\r\n      }),\r\n      onSubmit: valores => {\r\n         iniciarSesion(valores)\r\n      }\r\n\r\n  })\r\n\r\n\r\n\r\n  return ( \r\n    <Layout>\r\n\r\n    <div className=\"text-center\">\r\n\r\n    { mensaje && <Alerta />}\r\n\r\n    \r\n               <h2 className=\"headline\">Inicia sesion</h2>\r\n           <form className=\"paper form-group\" onSubmit={formik.handleSubmit}>\r\n             \r\n                 <input  type=\"email\" placeholder=\"Escribe tu correo\"\r\n                value={formik.values.email}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                className=\"input-block\"\r\n\r\n               />\r\n\r\n              { formik.touched.email && formik.errors.email ?(\r\n                   <div>{formik.errors.pass} </div>\r\n               ): null}\r\n                 <input  type=\"password\" placeholder=\"Escribe tu clave\"\r\n                value={formik.values.pass}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                className=\"input-block\"\r\n               />\r\n\r\n               \r\n              { formik.touched.pass && formik.errors.pass ?(\r\n                   <div>{formik.errors.pass} </div>\r\n               ): null}\r\n\r\n               <button type=\"submit\" className=\"paper-btn btn-pink\"> Iniciar sesion</button>\r\n\r\n           </form>\r\n\r\n    </div>\r\n  \r\n</Layout> \r\n   );\r\n}\r\n \r\nexport default Login;"]},"metadata":{},"sourceType":"module"}